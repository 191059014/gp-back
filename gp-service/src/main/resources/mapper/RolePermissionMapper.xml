<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hb.web.mapper.RolePermissionMapper">
    <resultMap id="BaseResultMap" type="com.hb.facade.entity.RolePermissionDO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="roleId" property="roleId" jdbcType="INTEGER"/>
        <result column="permissionId" property="permissionId" jdbcType="INTEGER"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="createUserId" property="createUserId" jdbcType="VARCHAR"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="updateUserId" property="updateUserId" jdbcType="VARCHAR"/>
        <result column="recordStatus" property="recordStatus" jdbcType="INTEGER"/>
        <result column="parentId" property="parentId" jdbcType="VARCHAR"/>
        <result column="unit" property="unit" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, roleId, permissionId, createTime, createUserId, updateTime, updateUserId, recordStatus, 
    parentId, unit
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_role_permission
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
      update t_role_permission set recordStatus=0 where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insertSelective" parameterType="com.hb.facade.entity.RolePermissionDO">
        insert into t_role_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleId != null">
                roleId,
            </if>
            <if test="permissionId != null">
                permissionId,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="createUserId != null">
                createUserId,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
            <if test="updateUserId != null">
                updateUserId,
            </if>
            <if test="recordStatus != null">
                recordStatus,
            </if>
            <if test="parentId != null">
                parentId,
            </if>
            <if test="unit != null">
                unit,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="permissionId != null">
                #{permissionId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=VARCHAR},
            </if>
            <if test="recordStatus != null">
                #{recordStatus,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="unit != null">
                #{unit,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hb.facade.entity.RolePermissionDO">
        update t_role_permission
        <set>
            <if test="roleId != null">
                roleId = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="permissionId != null">
                permissionId = #{permissionId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                createUserId = #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                updateUserId = #{updateUserId,jdbcType=VARCHAR},
            </if>
            <if test="recordStatus != null">
                recordStatus = #{recordStatus,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                parentId = #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="unit != null">
                unit = #{unit,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteByRoleId">
      delete from t_role_permission where roleId = #{roleId}
    </delete>

    <insert id="batchInsert" parameterType="collection">
        INSERT INTO t_role_permission
        (roleId, permissionId)
        VALUES
        <foreach collection="list" item="rolePermission" separator=",">
            (#{rolePermission.roleId}, #{rolePermission.permissionId})
        </foreach>
    </insert>

    <select id="getPermissionIdSetByRoleIdSet" resultType="java.lang.Integer">
        select permissionId from t_role_permission where roleId in
        <foreach collection="collection" item="roleId" open="(" close=")" separator=",">
            #{roleId}
        </foreach>
    </select>

</mapper>