<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hb.web.mapper.StockListMapper">
    <resultMap id="BaseResultMap" type="com.hb.facade.entity.StockListDO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="full_code" property="full_code" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="createUserId" property="createUserId" jdbcType="VARCHAR"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="updateUserId" property="updateUserId" jdbcType="VARCHAR"/>
        <result column="recordStatus" property="recordStatus" jdbcType="INTEGER"/>
        <result column="parentId" property="parentId" jdbcType="VARCHAR"/>
        <result column="unit" property="unit" jdbcType="INTEGER"/>
    </resultMap>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select * from stock_list
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="getStockListByStockCodeSet" resultType="com.hb.facade.entity.StockListDO">
        select * from stock_list where recordStatus = "1" and code in
        <foreach collection="collection" item="stockCode" open="(" close=")" separator=",">
            #{stockCode}
        </foreach>
    </select>

    <select id="findPageList" resultType="com.hb.facade.entity.StockListDO">
        select * from stock_list where recordStatus = "1" and state="1" and (
        (code like CONCAT(#{queryText},"%")) or (name like CONCAT("%",#{queryText},"%")))
        order by code
        <if test="pageSize != null and pageSize != 0">
            <![CDATA[ limit #{startRow},#{pageSize} ]]>
        </if>
    </select>

    <select id="getAllStockList" resultType="com.hb.facade.entity.StockListDO">
      select * from stock_list where recordStatus = "1"
    </select>

    <select id="findCount" resultType="java.lang.Integer">
        select count(1) from stock_list where 1=1
        <include refid="sqlCondition"/>
    </select>

    <select id="findStockList" resultType="com.hb.facade.entity.StockListDO">
        select * from stock_list where 1=1
        <include refid="sqlCondition"/>
        order by code
        <if test="pageSize != null and pageSize != 0">
            <![CDATA[ limit #{startRow},#{pageSize} ]]>
        </if>
    </select>

    <select id="findStock" resultType="com.hb.facade.entity.StockListDO">
        select * from stock_list where 1=1
        <include refid="sqlCondition"/>
    </select>
    <sql id="sqlCondition">
        <if test="stockListDO.id != null and stockListDO.id !=''">
            <![CDATA[ and id = #{stockListDO.id} ]]>
        </if>
        <if test="stockListDO.code != null and stockListDO.code !=''">
            <![CDATA[ and code like CONCAT(#{stockListDO.code},"%") ]]>
        </if>
        <if test="stockListDO.name != null and stockListDO.name !=''">
            <![CDATA[ and name like CONCAT(#{stockListDO.name},"%") ]]>
        </if>
        <if test="stockListDO.full_code != null and stockListDO.full_code !=''">
            <![CDATA[ and full_code = #{stockListDO.full_code} ]]>
        </if>
        <if test="stockListDO.type != null and stockListDO.type !=''">
            <![CDATA[ and type = #{stockListDO.type} ]]>
        </if>
        <if test="stockListDO.state != null and stockListDO.state !=''">
            <![CDATA[ and state = #{stockListDO.state} ]]>
        </if>
        <if test="stockListDO.createTime != null">
            <![CDATA[ and createTime = #{stockListDO.createTime} ]]>
        </if>
        <if test="stockListDO.createUserId != null and stockListDO.createUserId !=''">
            <![CDATA[ and createUserId = #{stockListDO.createUserId} ]]>
        </if>
        <if test="stockListDO.updateTime != null">
            <![CDATA[ and updateTime = #{stockListDO.updateTime} ]]>
        </if>
        <if test="stockListDO.updateUserId != null and stockListDO.updateUserId !=''">
            <![CDATA[ and updateUserId = #{stockListDO.updateUserId} ]]>
        </if>
        <if test="stockListDO.parentId != null and stockListDO.parentId !=''">
            <![CDATA[ and parentId = #{stockListDO.parentId} ]]>
        </if>
        <if test="stockListDO.unit != null and stockListDO.unit !=''">
            <![CDATA[ and unit = #{userDO.unit} ]]>
        </if>
        and recordStatus = "1"
    </sql>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
      update stock_list set recordStatus=0 where id=#{id}
    </delete>

    <insert id="insertSelective" parameterType="com.hb.facade.entity.StockListDO">
        insert into stock_list
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="full_code != null">
                full_code,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="createUserId != null">
                createUserId,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
            <if test="updateUserId != null">
                updateUserId,
            </if>
            <if test="recordStatus != null">
                recordStatus,
            </if>
            <if test="parentId != null">
                parentId,
            </if>
            <if test="unit != null">
                unit,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="full_code != null">
                #{full_code,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=VARCHAR},
            </if>
            <if test="recordStatus != null">
                #{recordStatus,jdbcType=CHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="unit != null">
                #{unit,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.hb.facade.entity.StockListDO">
        update stock_list
        <set>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="full_code != null">
                full_code = #{full_code,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                createUserId = #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                updateUserId = #{updateUserId,jdbcType=VARCHAR},
            </if>
            <if test="recordStatus != null">
                recordStatus = #{recordStatus,jdbcType=CHAR},
            </if>
            <if test="parentId != null">
                parentId = #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="unit != null">
                unit = #{unit,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

</mapper>